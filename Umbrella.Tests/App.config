<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="enterpriseLibrary.ConfigurationSource" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="contextSettings" type="nVentive.Umbrella.Contexts.ContextSettings, nVentive.Umbrella" />
  </configSections>
  <enterpriseLibrary.ConfigurationSource selectedSource="System Configuration Source">
    <sources>
      <add name="System Configuration Source" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <add name="ContextBuilder" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
          filePath="ContextBuilder.config" />
    </sources>
  </enterpriseLibrary.ConfigurationSource>
  <contextSettings defaultBuilder="nVentive.Umbrella.ObjectBuilder.Contexts.ContextBuilder, nVentive.Umbrella.ObjectBuilder">
    <contexts>
      <add name="Core">
        <entries>
          <!--<add name="A" type="nVentive.Umbrella.Contexts.FactoryServiceData, nVentive.Umbrella" service="nVentive.Umbrella.ObjectBuilder.Factories.Factory, nVentive.Umbrella" as="nVentive.Umbrella.Factories.IFactory, nVentive.Umbrella.ObjectBuilder">-->
          <add name="A" type="nVentive.Umbrella.Factories.FactoryServiceData, nVentive.Umbrella" core="true" service="nVentive.Umbrella.Factories.Factory, nVentive.Umbrella" as="nVentive.Umbrella.Factories.IFactory, nVentive.Umbrella">
            <strategies>
              <add name="A1" concreteType="nVentive.Umbrella.Factories.ArrayFactoryStrategy, nVentive.Umbrella"/>
              <add name="A2" concreteType="nVentive.Umbrella.EnterpriseLibrary.Configuration.ConfigurationSourceFactoryStrategy, nVentive.Umbrella"/>
              <add name="A3" concreteType="nVentive.Umbrella.ObjectBuilder.Factories.FactoryStrategy, nVentive.Umbrella.ObjectBuilder"/>
            </strategies>
          </add>
          <add name="B" type="nVentive.Umbrella.Contexts.ServiceData, nVentive.Umbrella" core="true" service="ObjectBuilder.Builder, ObjectBuilder" as="ObjectBuilder.IBuilder, ObjectBuilder"/>
          <add name="C" type="nVentive.Umbrella.Contexts.ServiceData, nVentive.Umbrella" core="true" service="ObjectBuilder.LifetimeContainer, ObjectBuilder" as="ObjectBuilder.ILifetimeContainer, ObjectBuilder"/>
          <add name="D" type="nVentive.Umbrella.ObjectBuilder.Factories.FactoryContextData, nVentive.Umbrella.ObjectBuilder">
            <strategies>
              <add name="A" stage="PreCreation" type="ObjectBuilder.BuildKeyMappingStrategy, ObjectBuilder"/>
              <add name="B" stage="PreCreation" type="ObjectBuilder.SingletonStrategy, ObjectBuilder"/>
              <add name="C" stage="PreCreation" type="ObjectBuilder.ConstructorReflectionStrategy, ObjectBuilder.Injection"/>
              <add name="D" stage="PreCreation" type="ObjectBuilder.MethodReflectionStrategy, ObjectBuilder.Injection"/>
              <add name="E" stage="PreCreation" type="ObjectBuilder.PropertyReflectionStrategy, ObjectBuilder.Injection"/>
              <!--<add name="F" stage="PreCreation" type="ObjectBuilder.EventBrokerReflectionStrategy, ObjectBuilder.EventBroker"/>-->
              <!--<add name="G" stage="PreCreation" type="ObjectBuilder.InterceptionReflectionStrategy, ObjectBuilder.Interception"/>-->
              
              <!--<add name="H" stage="Creation" type="ObjectBuilder.InterfaceInterceptionStrategy, ObjectBuilder.Interception"/>
              <add name="I" stage="PreCreation" type="ObjectBuilder.VirtualInterceptionStrategy, ObjectBuilder.Interception"/>-->
              <add name="J" stage="Creation" type="ObjectBuilder.CreationStrategy, ObjectBuilder.Injection"/>
              
              <add name="K" stage="Initialization" type="ObjectBuilder.PropertySetterStrategy, ObjectBuilder.Injection"/>
              <add name="L" stage="Initialization" type="ObjectBuilder.MethodCallStrategy, ObjectBuilder.Injection"/>
              <!--<add name="M" stage="Initialization" type="ObjectBuilder.EventBrokerStrategy, ObjectBuilder.EventBroker"/>-->
              
              <add name="N" stage="PostInitialization" type="ObjectBuilder.BuilderAwareStrategy, ObjectBuilder"/>
              <add name="O" stage="PostInitialization" type="nVentive.Umbrella.ObjectBuilder.PolicyInjection.PolicyInjectionStrategy, nVentive.Umbrella.ObjectBuilder"/>
              <!--<add name="O" stage="PostInitialization" type="ObjectBuilder.RemotingInterceptionStrategy, ObjectBuilder.Interception"/>-->
            </strategies>
          </add>
          <add name="E" type="nVentive.Umbrella.Contexts.ServiceData, nVentive.Umbrella" core="true" service="nVentive.Umbrella.ObjectBuilder.Factories.InterfaceMappingService, nVentive.Umbrella.ObjectBuilder" as="nVentive.Umbrella.Factories.IInterfaceMappingService, nVentive.Umbrella"/>
          <add name="F" type="nVentive.Umbrella.Factories.TypeMappingsData, nVentive.Umbrella">
            <mappings>
              <add name="F1" interfaceType="nVentive.Umbrella.Sources.ISource`1, nVentive.Umbrella" concreteType="nVentive.Umbrella.Sources.Source`1, nVentive.Umbrella"/>
              <add name="F2" interfaceType="nVentive.Umbrella.Contexts.IContext, nVentive.Umbrella" concreteType="nVentive.Umbrella.Contexts.Context, nVentive.Umbrella"/>
            </mappings>
          </add>
        </entries>
      </add>
      <add name="Data"/>
      <add name="Entities"/>
      <add name="Services"/>
      <add name="UI"/>
    </contexts>
  </contextSettings>
</configuration>